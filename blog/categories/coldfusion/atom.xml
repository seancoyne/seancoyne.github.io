<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Coldfusion | n42 Designs]]></title>
  <link href="http://blog.n42designs.com/blog/categories/coldfusion/atom.xml" rel="self"/>
  <link href="http://blog.n42designs.com/"/>
  <updated>2014-10-14T15:11:23-04:00</updated>
  <id>http://blog.n42designs.com/</id>
  <author>
    <name><![CDATA[Sean Coyne]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ColdFusion 9 and Mod_jrun on Mac OS X Yosemite With Apache 2.4]]></title>
    <link href="http://blog.n42designs.com/blog/2014/10/13/coldfusion-9-and-modjrun-on-mac-os-x-yosemite-with-apache-24/"/>
    <updated>2014-10-13T19:30:00-04:00</updated>
    <id>http://blog.n42designs.com/blog/2014/10/13/coldfusion-9-and-modjrun-on-mac-os-x-yosemite-with-apache-24</id>
    <content type="html"><![CDATA[<p>OS X Yosemite updates the included Apache HTTP server from 2.2 to 2.4. The ColdFusion 9 connector installs a version of mod_jrun which has been compiled for Apache 2.2. Using <a href="https://research.g0blin.co.uk/mod_jrun-on-apache-2-4-ubuntu-14-04-coldfusion-9/">this article</a> I was able to recompile the connector for Apache 2.4 and get ColdFusion 9 running with Apache 2.4. <a href="https://www.dropbox.com/s/oxffau75ps9q1zv/mod_jrun24.so.zip?dl=1">Here</a> you will find a zipped version of the compiled connector so you can skip recompiling it yourself. Simply unzip and move the .so file to the desired location on your Mac and update your Apache configuration to point to it.</p>

<p>So:</p>

<p><code>LoadModule jrun_module /Applications/JRun4/lib/wsconfig/1/mod_jrun22.so</code></p>

<p>becomes</p>

<p><code>LoadModule jrun_module /Applications/JRun4/lib/wsconfig/1/mod_jrun24.so</code></p>

<p>You may find you need to update other Apache configuration settings. You can find additional information on upgrading from Apache 2.2 to 2.4 in the <a href="http://httpd.apache.org/docs/2.4/upgrading.html">Apache HTTP Server Documentation</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running ColdFusion 10 on OS X Mavericks]]></title>
    <link href="http://blog.n42designs.com/blog/2013/10/23/running-coldfusion-10-on-os-x-mavericks/"/>
    <updated>2013-10-23T12:03:00-04:00</updated>
    <id>http://blog.n42designs.com/blog/2013/10/23/running-coldfusion-10-on-os-x-mavericks</id>
    <content type="html"><![CDATA[<p>Running ColdFusion 10 on OS X Mavericks is possible, but not straightforward.  Unfortunately, it seems the web server connector does not work with Apache 2.2.24 which ships with Mavericks.  A bug has been logged for this here: <a href="https://bugbase.adobe.com/index.cfm?event=bug&amp;amp;id=3653076">https://bugbase.adobe.com/index.cfm?event=bug&amp;id=3653076</a>.  Please vote for it.
There are a couple of issues I had with Mavericks and ColdFusion 10 (CF 9 works fine for me for what it is worth).
First, ColdFusion wouldn&rsquo;t start because Mavericks removed Java 6.  I had to update 3 files to fix this:</p>

<p><code>/Applications/ColdFusion10/cfusion/bin/jvm.config</code>
<code>/Applications/ColdFusion10/cfusion/bin/coldfusion</code>
<code>/Applications/ColdFusion10/cfusion/runtime/bin/wsconfig_jvm.config</code></p>

<p>In each of these, there was a setting to set the Java home path.  It was set to the old location for Java 6.  I updated these to point to Java 7.  For me this was:</p>

<p><code>/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home</code></p>

<p>This was after installing the <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">latest Updater 45 JDK from Oracle&rsquo;s website</a>.</p>

<p>Once I made these changes ColdFusion started fine.</p>

<p>The next issue is with the Connector.  Adobe created a customized version of mod_jk to go along with their customized version of Tomcat.  Because of this, recompiling mod_jk is not going to work. <del>We&rsquo;ll have to wait for an updated version from Adobe.</del> (<strong>EDIT:</strong> See Mike&rsquo;s comment <a href="#comment-1635209099">below</a> for a solution!) Until then you can either use the built in web server or install MAMP PRO which ships with Apache 2.2.22 (same as Mountain Lion) and then configure using the web server connector.</p>

<p>I followed the recommendations in this blog post: <a href="http://www.brilang.com/2012/06/installing-coldfusion-10-under-mamp-pro-2-on-os-x-lion/1137">http://www.brilang.com/2012/06/installing-coldfusion-10-under-mamp-pro-2-on-os-x-lion/1137</a> to configure MAMP PRO.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FarCry LESS Plugin]]></title>
    <link href="http://blog.n42designs.com/blog/2012/04/10/farcry-less-plugin/"/>
    <updated>2012-04-10T11:26:00-04:00</updated>
    <id>http://blog.n42designs.com/blog/2012/04/10/farcry-less-plugin</id>
    <content type="html"><![CDATA[<p>Today I released a <a href="https://github.com/seancoyne/farcryless">plugin for FarCry</a> that will automatically compile your <a href="http://lesscss.org/">LESS</a> files into CSS. No more need to compile on your development machine before you push to production, and no more need to punish your users by compiling on the client side with <a href="https://github.com/cloudhead/less.js">Less.js</a>. While those solutions are perfectly acceptable, this plugin will let you simply code in LESS, then let FarCry do the work of serving compiled, minified CSS to your users.</p>

<p>The plugin uses a similar syntax to FarCry&rsquo;s built in skin:loadCSS tag so it should be instantly familiar.  Be sure to read the installation instructions to avoid a couple of potential &ldquo;gotchas&rdquo;.</p>

<p><a href="https://github.com/seancoyne/farcryless">Check it out on Github</a>, and let me know if its useful for you, or if you would like to see any additional features.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FarCry Solr Pro]]></title>
    <link href="http://blog.n42designs.com/blog/2012/04/05/farcry-solr-pro/"/>
    <updated>2012-04-05T17:30:00-04:00</updated>
    <id>http://blog.n42designs.com/blog/2012/04/05/farcry-solr-pro</id>
    <content type="html"><![CDATA[<p><a href="http://jeffcoughlin.com/blog">Jeff Coughin</a> and I just launched a new FarCry plugin to enhance the search capabilities of your FarCry website. Check out <a href="http://jeffcoughlin.com/blog/index.cfm/2012/4/5/FarCry-Solr-Pro-Plugin">his announcement</a> or the <a href="http://jeffcoughlin.github.io/farcrysolrpro">plugin website</a> for more information.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github Gist Renderer for BlogCFC]]></title>
    <link href="http://blog.n42designs.com/blog/2012/02/12/github-gist-renderer-for-blogcfc/"/>
    <updated>2012-02-12T13:47:00-05:00</updated>
    <id>http://blog.n42designs.com/blog/2012/02/12/github-gist-renderer-for-blogcfc</id>
    <content type="html"><![CDATA[<p>I created a quick renderer for Github Gists for use within <a href="http://www.blogcfc.com/">BlogCFC</a> entries. You can see it in action right here. If interested just grab the code from the gist below and save it to <code>/org/camden/blog/render/gist.cfc</code>. You can then use</p>

<p><div><script src='https://gist.github.com/8810495.js'></script>
<noscript><pre><code>&lt;gist id=&quot;[gist id]&quot;&gt;</code></pre></noscript></div>
</p>

<p>to include the gist in your entry. If you want to constrain the height you can use CSS like:</p>

<p><div><script src='https://gist.github.com/8810484.js'></script>
<noscript><pre><code>.gist .gist-file .gist-data {
	max-height: 250px;
}</code></pre></noscript></div>
</p>

<p>Here is an example of what the output looks like, using the Gist I created to hold the code for the renderer.  Feel free to grab it for your own BlogCFC install.</p>

<p><div><script src='https://gist.github.com/1810183.js'></script>
<noscript><pre><code>&lt;!---

Save this file as /org/camden/blog/render/gist.cfc

In your entries you can then include a Github gist using the following syntax:

&lt;gist id=&quot;[gist id]&quot;&gt;

Example: &lt;gist id=&quot;1810183&quot;&gt; would embed this gist into a blog entry.

If you want to limit the height of large Gists you can use the following CSS to set a max height:

.gist .gist-file .gist-data {
  max-height: 250px;
}

---&gt;
&lt;cfcomponent extends=&quot;render&quot; output=&quot;false&quot;&gt;
	
	&lt;cffunction name=&quot;display&quot; output=&quot;false&quot; returntype=&quot;string&quot; access=&quot;public&quot;&gt;
		&lt;cfargument name=&quot;id&quot; required=&quot;true&quot; type=&quot;string&quot; /&gt;
		&lt;cfset var html = &quot;&quot; /&gt;
		
		&lt;cfsavecontent variable=&quot;html&quot;&gt;
		&lt;cfoutput&gt;
		&lt;script src=&quot;https://gist.github.com/#arguments.id#.js&quot;&gt;&lt;/script&gt;
		&lt;/cfoutput&gt;
		&lt;/cfsavecontent&gt;
		
		&lt;cfreturn trim(html) /&gt;
		
	&lt;/cffunction&gt;
	
&lt;/cfcomponent&gt;</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
